C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 17:07:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"    // Header file with LCD interfacing functions
   3          #include "serial.C" // Header file with UART interfacing functions
   4          #include <stdio.h>
   5          sbit LED=P1^7;
   6          int x=0;
   7          int fiveout=0;
   8          int oneout=0;
   9          int totals=0;
  10          char acc[1];
  11          // Test function definitions
  12          /************************************************
  13          lcd_test():
  14            LCD test function that gets called when
  15            '1' is received from UART
  16            Prints "LCD Ok" on LCD. After 4 seconds
  17            LCD is cleared
  18          
  19          ************************************************/
  20          unsigned char ccc[5];
  21          void lcd_test(void)
  22          {
  23   1         lcd_cmd(0x80);
  24   1         lcd_write_string("LCD Ok");
  25   1         msdelay(2000);
  26   1         lcd_cmd(0x01);
  27   1      } 
  28          
  29          /************************************************
  30          led_test():
  31            LED test code. Update this function
  32            to test LEDs on P1.7-P1.4 by blinking
  33            them for a few times.
  34          ************************************************/
  35          void led_test(void)
  36          {
  37   1      P1=0xFF;
  38   1      msdelay(200);
  39   1      //P1=0x00;
  40   1      //msdelay(200);
  41   1      }
  42          
  43          int ac1bal=10000;
  44          char ac1[5];
  45          int ac2bal=10000;
  46          char ac2[5];
  47          
  48          char cost1=0;
  49          char cost0=0;
  50          
  51          // Main function
  52          void main(void)
  53          {
  54   1        unsigned char ch=0;
C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 17:07:49 PAGE 2   

  55   1        unsigned char ac_ch=0;
  56   1        // Initialize port P1 for output from P1.7-P1.4
  57   1        P1 = 0x0F;
  58   1        
  59   1        // Call initialization functions
  60   1        lcd_init();
  61   1        uart_init();
  62   1        
  63   1        // These strings will be printed in terminal software
  64   1        //transmit_string("Press A for Account display and W for withdrawing cash\r\n");
  65   1        /*transmit_string("************************\r\n");
  66   1        transmit_string("******8051 Tests********\r\n");
  67   1        transmit_string("************************\r\n");
  68   1        transmit_string("Press 1 for LCD test\r\n");
  69   1        transmit_string("Press 2 for LED test\r\n");
  70   1        
  71   1        while(1)
  72   1        {
  73   1          ch = receive_char();
  74   1          switch(ch)
  75   1          {
  76   1            case '1':
  77   1              lcd_test();
  78   1              transmit_string(" LCD Tested \r\n");
  79   1            break;
  80   1            
  81   1            case '2':
  82   1              led_test();
  83   1              transmit_string(" LED Tested \r\n ");
  84   1            break;
  85   1          
  86   1            default:
  87   1              transmit_string(" Incorrect string pressed \r\n ");
  88   1          }
  89   1          msdelay(100);
  90   1        }
  91   1      */
  92   1            
  93   1              
  94   1        while(1)
  95   1        {
  96   2            // Receive a character
  97   2            ch = receive_char();
  98   2          
  99   2            // Decide which test function to run based on character sent
 100   2              // Displays the string on the terminal software
 101   2            switch(ch)
 102   2            {
 103   3              case 'A':
 104   3              case 'a':
 105   3              transmit_string("Hello, Please enter Account Number\r\n");  
 106   3              ac_ch = receive_char();
 107   3              
 108   3              
 109   3              switch(ac_ch){
 110   4              
 111   4                case '1':
 112   4                  transmit_string("Account Holder: Steven\r\n");
 113   4                sprintf(ccc,"%d",ac1bal);
 114   4                transmit_string("Account Balance:");
 115   4                transmit_string(ccc);
 116   4                transmit_string("\r\n");
C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 17:07:49 PAGE 3   

 117   4                
 118   4                
 119   4              break;
 120   4                
 121   4                case '2':
 122   4                  transmit_string("Account Holder: Gordon\r\n");
 123   4                sprintf(ccc,"%d",ac2bal);
 124   4                transmit_string("Account Balance:");
 125   4                transmit_string(ccc);
 126   4                transmit_string("\r\n");
 127   4              break;
 128   4              
 129   4                default:
 130   4                  transmit_string("No such account, please enter valid details\r\n");
 131   4              
 132   4              }
 133   3                break;
 134   3              
 135   3              case 'W':
 136   3              case 'w':
 137   3                transmit_string("Withdraw state, enter account number\r\n");  
 138   3              ac_ch = receive_char();
 139   3              
 140   3              switch(ac_ch){
 141   4              case '1':
 142   4                  transmit_string("Account Holder: Steven\r\n");
 143   4                sprintf(ccc,"%d",ac2bal);
 144   4                transmit_string("Account Balance:");
 145   4                transmit_string(ccc);
 146   4                transmit_string("\r\n");
 147   4              transmit_string("Enter Amount, in hundreds\r\n");
 148   4              
 149   4              //REceiving money
 150   4              cost1=receive_char();
 151   4              msdelay(1000);
 152   4              cost0=receive_char();
 153   4              
 154   4              
 155   4              totals= ((cost1-'0')*1000)+((cost0-'0')*100);
 156   4                fiveout=  totals/500;
 157   4               oneout = (totals-(fiveout*500))/100;
 158   4               
 159   4              
 160   4              transmit_string("Remaining Balance:");
 161   4              x=ac1bal-totals;
 162   4              ac1bal=x;
 163   4              sprintf(ccc,"%d",x);
 164   4                transmit_string(ccc);
 165   4                transmit_string("\r\n");
 166   4              transmit_string("500 notes: ");
 167   4              sprintf(acc,"%d",fiveout);
 168   4              transmit_string(acc);
 169   4              transmit_string(" ");
 170   4              transmit_string("100 notes: ");
 171   4              sprintf(acc,"%d",oneout);
 172   4              transmit_string(acc);
 173   4                transmit_string("\r\n");
 174   4              
 175   4              break;
 176   4                
 177   4                case '2':
 178   4                  transmit_string("Account Holder: Gordon\r\n");
C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 17:07:49 PAGE 4   

 179   4                sprintf(ccc,"%d",ac2bal);
 180   4                transmit_string("Account Balance:");
 181   4                transmit_string(ccc);
 182   4                transmit_string("\r\n");
 183   4                transmit_string("Enter Amount, in hundreds\r\n");
 184   4                
 185   4                //REceiving money
 186   4              cost1=receive_char();
 187   4              cost0=receive_char();
 188   4              
 189   4               totals= ((cost1-'0')*1000)+((cost0-'0')*100);
 190   4                fiveout=  totals/500;
 191   4               oneout = (totals-(fiveout*500))/100;
 192   4              
 193   4              transmit_string("Remaining Balance:");
 194   4              x=ac2bal-totals;
 195   4                ac2bal=x;
 196   4              sprintf(ccc,"%d",x);
 197   4                transmit_string(ccc);
 198   4                transmit_string("\r\n");
 199   4              transmit_string("500 notes: ");
 200   4              sprintf(acc,"%d",fiveout);
 201   4              transmit_string(acc);
 202   4              transmit_string(" ");
 203   4              transmit_string("100 notes: ");
 204   4              sprintf(acc,"%d",oneout);
 205   4              transmit_string(acc);
 206   4                transmit_string("\r\n");
 207   4                
 208   4              break;
 209   4              
 210   4                default:
 211   4                  transmit_string("No such account, please enter valid details\r\n");
 212   4              }
 213   3                break;
 214   3                    
 215   3              default:
 216   3                transmit_string("Enter Valid Operation\r\n");
 217   3                break;
 218   3            }
 219   2            main();
*** WARNING C265 IN LINE 219 OF main.c: 'main': recursive call to non-reentrant function
 220   2            msdelay(100);
 221   2        }
 222   1      }
 223          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1071    ----
   CONSTANT SIZE    =    299    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
