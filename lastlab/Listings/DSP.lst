C51 COMPILER V9.60.7.0   DSP                                                               04/08/2024 15:48:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DSP
OBJECT MODULE PLACED IN .\Objects\DSP.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DSP.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DSP.l
                    -st) TABS(2) OBJECT(.\Objects\DSP.obj)

line level    source

   1          #include <at89c5131.h>
   2          
   3          bit tx_complete = 0;
   4          bit rx_complete = 0;
   5          
   6          void msdelay(unsigned int time)
   7          {
   8   1        int i,j;
   9   1        for(i=0;i<time;i++)
  10   1        {
  11   2          for(j=0;j<382;j++);
  12   2        }
  13   1      }
  14          
  15          void uart_init(void)
  16          {
  17   1        TMOD=0x20;
  18   1        TH1=0xF3;
  19   1        SCON=0x50;
  20   1        TCON=0x40;
  21   1        ES=1;
  22   1        EA=1;           
  23   1      }
  24            
  25          void transmit_char(unsigned char ch)
  26          {
  27   1        SBUF=ch;
  28   1        while(!tx_complete);
  29   1        tx_complete = 0;     
  30   1      }
  31          
  32          void transmit_string(unsigned char *s)
  33          {
  34   1        while(*s != 0)
  35   1        {
  36   2          transmit_char(*s++);
  37   2        }
  38   1      }
  39            
  40          unsigned char receive_char(void)
  41          {
  42   1        unsigned char ch = 0;
  43   1        while(!rx_complete);        
  44   1        rx_complete = 0;
  45   1        ch = SBUF;          
  46   1        return ch;          
  47   1      }
  48            
  49          void serial_ISR(void) interrupt 4
  50          {
  51   1        if(TI==1)     
  52   1        {
  53   2          TI = 0;     
  54   2          tx_complete = 1;  
C51 COMPILER V9.60.7.0   DSP                                                               04/08/2024 15:48:34 PAGE 2   

  55   2        }
  56   1        else if(RI==1)      
  57   1        {
  58   2          RI = 0;     
  59   2          rx_complete = 1;
  60   2        }
  61   1      }
  62          
  63          void main(void)
  64          {
  65   1        unsigned char data_recv[5] = {0,0,0,0,'\0'};
  66   1        int sample_val;
  67   1        int sample_val_doub;
  68   1        unsigned char data_send[5] = {0,0,0,0,'\0'};
  69   1        const double filter_coeff[8] = {0.00875474, 0.04794887, 0.16402439, 0.27927199, 0.27927199, 0.16402439, 0
             -.04794887, 0.00875474}; 
  70   1        int ctr = 0;
  71   1        int x[8]={0,0,0,0,0,0,0,0};
  72   1        double y = 0;
  73   1        int ans = 0;
  74   1        int i=0;
  75   1        uart_init();
  76   1        
  77   1        while (1)
  78   1        {
  79   2          //receiving sample value from PC
  80   2          //since each sample is a 4 digit number, the digits are stored in a character array of length 4  
  81   2          data_recv[0] = receive_char();    
  82   2          data_recv[1] = receive_char();
  83   2          data_recv[2] = receive_char(); 
  84   2          data_recv[3] = receive_char();
  85   2          data_recv[4] = '\0';
  86   2      
  87   2          //converting character array to its equivalent integer value
  88   2          sample_val = (data_recv[0]-48)*1000 + (data_recv[1]-48)*100 + (data_recv[2]-48)*10 + (data_recv[3]-48);
  89   2          
  90   2          //doubling the obtained integer value (you need to implement filtering here...)
  91   2          sample_val_doub = sample_val * 2;
  92   2          if (ctr<8){
  93   3            y = 0;
  94   3            x[ctr] = sample_val;
  95   3            for (i=0;i<ctr+1;i++){
  96   4              y = y + (filter_coeff[i]*x[i]);
  97   4            }
  98   3            ans = (int)y;
  99   3            ctr++;
 100   3          }
 101   2          else{
 102   3            y = 0;
 103   3            x[0]=x[1];
 104   3            x[1]=x[2];
 105   3            x[2]=x[3];
 106   3            x[4]=x[5];
 107   3            x[5]=x[6];
 108   3            x[6]=x[7];
 109   3            x[7]=sample_val;
 110   3            for (i=0;i<8;i++){
 111   4              y = y + (filter_coeff[i]*x[i]);
 112   4            }
 113   3            ans = (int)y;
 114   3          }
 115   2          //converting integer value back to 4 character array (i.e string)
C51 COMPILER V9.60.7.0   DSP                                                               04/08/2024 15:48:34 PAGE 3   

 116   2          //data_send[0] = 48 + (sample_val_doub/1000);
 117   2          //data_send[1] = 48 + (sample_val_doub%1000/100);
 118   2          //data_send[2] = 48 + (sample_val_doub%100/10);
 119   2          //data_send[3] = 48 + (sample_val_doub%10);
 120   2          data_send[0] = 48 + (ans/1000);
 121   2          data_send[1] = 48 + (ans%1000/100);
 122   2          data_send[2] = 48 + (ans%100/10);
 123   2          data_send[3] = 48 + (ans%10);
 124   2          
 125   2          //transmitting output back to PC
 126   2          transmit_string(data_send);
 127   2          transmit_string("\r\n");
 128   2        }
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    762    ----
   CONSTANT SIZE    =     61    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      75
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
